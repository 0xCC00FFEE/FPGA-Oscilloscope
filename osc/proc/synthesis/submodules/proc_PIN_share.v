// proc_PIN_share.v

// This file was auto-generated from altera_tristate_conduit_pin_sharer_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 13.1 162 at 2014.05.06.19:42:14

`timescale 1 ps / 1 ps
module proc_PIN_share (
		input  wire        clk_clk,                       //   clk.clk
		input  wire        reset_reset,                   // reset.reset
		output wire        request,                       //   tcm.request
		input  wire        grant,                         //      .grant
		output wire [0:0]  ROM_ctrl_tcm_chipselect_n_out, //      .ROM_ctrl_tcm_chipselect_n_out_out
		output wire [0:0]  RAM_ctrl_tcm_chipselect_n_out, //      .RAM_ctrl_tcm_chipselect_n_out_out
		output wire [15:0] address,                       //      .address_out
		output wire [0:0]  r_w,                           //      .r_w_out
		output wire [7:0]  data,                          //      .data_out
		input  wire [7:0]  data_in,                       //      .data_in
		output wire        data_outen,                    //      .data_outen
		input  wire        tcs0_request,                  //  tcs0.request
		output wire        tcs0_grant,                    //      .grant
		input  wire [15:0] tcs0_address_out,              //      .address_out
		input  wire [0:0]  tcs0_write_n_out,              //      .write_n_out
		input  wire [7:0]  tcs0_data_out,                 //      .data_out
		output wire [7:0]  tcs0_data_in,                  //      .data_in
		input  wire        tcs0_data_outen,               //      .data_outen
		input  wire [0:0]  tcs0_chipselect_n_out,         //      .chipselect_n_out
		input  wire        tcs1_request,                  //  tcs1.request
		output wire        tcs1_grant,                    //      .grant
		input  wire [15:0] tcs1_address_out,              //      .address_out
		input  wire [0:0]  tcs1_write_n_out,              //      .write_n_out
		input  wire [7:0]  tcs1_data_out,                 //      .data_out
		output wire [7:0]  tcs1_data_in,                  //      .data_in
		input  wire        tcs1_data_outen,               //      .data_outen
		input  wire [0:0]  tcs1_chipselect_n_out          //      .chipselect_n_out
	);

	wire  [1:0] arbiter_grant_data;        // arbiter:next_grant -> pin_sharer:next_grant
	wire        arbiter_grant_ready;       // pin_sharer:ack -> arbiter:ack
	wire        pin_sharer_tcs1_arb_valid; // pin_sharer:arb_ROM_ctrl_tcm -> arbiter:sink1_valid
	wire        pin_sharer_tcs0_arb_valid; // pin_sharer:arb_RAM_ctrl_tcm -> arbiter:sink0_valid

	proc_PIN_share_pin_sharer pin_sharer (
		.clk                           (clk_clk),                       //      clk.clk
		.reset                         (reset_reset),                   //    reset.reset
		.request                       (request),                       //      tcm.request
		.grant                         (grant),                         //         .grant
		.ROM_ctrl_tcm_chipselect_n_out (ROM_ctrl_tcm_chipselect_n_out), //         .ROM_ctrl_tcm_chipselect_n_out_out
		.RAM_ctrl_tcm_chipselect_n_out (RAM_ctrl_tcm_chipselect_n_out), //         .RAM_ctrl_tcm_chipselect_n_out_out
		.address                       (address),                       //         .address_out
		.r_w                           (r_w),                           //         .r_w_out
		.data                          (data),                          //         .data_out
		.data_in                       (data_in),                       //         .data_in
		.data_outen                    (data_outen),                    //         .data_outen
		.tcs0_request                  (tcs0_request),                  //     tcs0.request
		.tcs0_grant                    (tcs0_grant),                    //         .grant
		.tcs0_tcm_address_out          (tcs0_address_out),              //         .address_out
		.tcs0_tcm_write_n_out          (tcs0_write_n_out),              //         .write_n_out
		.tcs0_tcm_data_out             (tcs0_data_out),                 //         .data_out
		.tcs0_tcm_data_in              (tcs0_data_in),                  //         .data_in
		.tcs0_tcm_data_outen           (tcs0_data_outen),               //         .data_outen
		.tcs0_tcm_chipselect_n_out     (tcs0_chipselect_n_out),         //         .chipselect_n_out
		.tcs1_request                  (tcs1_request),                  //     tcs1.request
		.tcs1_grant                    (tcs1_grant),                    //         .grant
		.tcs1_tcm_address_out          (tcs1_address_out),              //         .address_out
		.tcs1_tcm_write_n_out          (tcs1_write_n_out),              //         .write_n_out
		.tcs1_tcm_data_out             (tcs1_data_out),                 //         .data_out
		.tcs1_tcm_data_in              (tcs1_data_in),                  //         .data_in
		.tcs1_tcm_data_outen           (tcs1_data_outen),               //         .data_outen
		.tcs1_tcm_chipselect_n_out     (tcs1_chipselect_n_out),         //         .chipselect_n_out
		.ack                           (arbiter_grant_ready),           //    grant.ready
		.next_grant                    (arbiter_grant_data),            //         .data
		.arb_ROM_ctrl_tcm              (pin_sharer_tcs1_arb_valid),     // tcs1_arb.valid
		.arb_RAM_ctrl_tcm              (pin_sharer_tcs0_arb_valid)      // tcs0_arb.valid
	);

	proc_PIN_share_arbiter arbiter (
		.clk         (clk_clk),                   //       clk.clk
		.reset       (reset_reset),               // clk_reset.reset
		.ack         (arbiter_grant_ready),       //     grant.ready
		.next_grant  (arbiter_grant_data),        //          .data
		.sink0_valid (pin_sharer_tcs0_arb_valid), //     sink0.valid
		.sink1_valid (pin_sharer_tcs1_arb_valid)  //     sink1.valid
	);

endmodule
